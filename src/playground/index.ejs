<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="google" value="notranslate">
  <link rel="shortcut icon" href="https://crm.magaoedu.com/static/favicon.ico">
  <title>
    Scratch3D虚拟世界
  </title>
  <style type="text/css">
    body {
      margin: 0;
      padding: 0;
      height: 100vh;
    }

    .wave-loading {
      width: 100%;
      height: 100%;
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
      background-image: url('https://file.magaoedu.com/5d4fe781898bb3c0cc946fd08b353435.png');
      background-size: 100% 100%;
      background-repeat: no-repeat;
      /* left: 50%; */
      /* top: 50%; */
      /* transform: translate(-50%, -50%); */
    }

    .wave-loading span {
      display: inline-block;
      font-size: 45px;
      font-weight: bold;
      color: #fff;
      font-family: 'Courier New', Courier, monospace;
      animation: wave-loading 1s ease-in-out infinite;
      animation-delay: calc(0.1s * var(--time));
    }

    @keyframes wave-loading {
      0% {
        transform: translateY(0px);
      }

      25% {
        transform: translateY(-5px);
      }

      50%,
      100% {
        transform: translateY(0px);
      }
    }
  </style>
  <% if (htmlWebpackPlugin.options.sentryConfig) { %>
    <!-- Sentry error logging to help with finding bugs -->
    <script src="https://cdn.ravenjs.com/3.22.1/raven.min.js" crossorigin="anonymous"></script>
    <script>
      Raven.config(<%= htmlWebpackPlugin.options.sentryConfig %>).install();
    </script>
    <!-- /Sentry -->
    <% } %>
      <script>
        let fileurl = '';
        if (sessionStorage.fileurl) {
          fileurl = JSON.parse(sessionStorage.fileurl)
        } else {
          fileurl = './static/project.sb3'
        }
        window.scratchConfig = {
          logo: {
            show: true, //是否显示
            url: "./static/logo.png", //logo地址，支持base64图片
            handleClickLogo: () => { //处理LOGO点击事件
            }
          },
          menuBar: {
            //菜单栏样式
            style: {
              background: 'hsla(215, 100%, 65%, 1)',
            },
            //切换语言按钮
            languageButton: {
              show: true, //是否显示
              defaultLanguage: 'zh-cn' //默认语言 en zh-cn zh-tw
            },
            //新建按钮
            newButton: {
              show: true, //是否显示
              handleBefore() {
                //拦截点击事件，返回true继续执行
                return true
              }
            },
            //从计算机加载按钮
            loadFileButton: {
              show: true, //是否显示
              handleBefore() {
                //拦截点击事件，返回true继续执行
                return true
              }
            },
            //保存到计算机按钮
            saveFileButton: {
              show: true, //是否显示
              handleBefore() {
                //拦截点击事件，返回true继续执行
                return true
              }
            },
            //加速模式按钮
            turboModeButton: {
              show: true //是否显示
            },
            //教程按钮
            helpButton: {
              show: true, //是否显示
              handleBefore: () => {
                //拦截点击事件，返回true继续执行
                return true
              }
            },
            //我的物品按钮
            myStuff: {
              show: true, //是否显示
              url: '/myProject' //跳转的连接
            },
            //用户头像按钮
            userAvatar: {
              show: true, //是否显示
              username: '未登录', //用户名
              avatar: './static/avatar.png', //用户头像
              handleClick() {
                //点击头像，可以弹出登录框等操作
              }
            },
            //自定义按钮
            customButtons: [
              {
                show: true, //是否显示
                buttonName: '分享', //按钮名
                style: { //按钮样式
                  color: 'white',
                  background: 'hsla(30, 100%, 55%, 1)',
                },
                handleClick: () => { //按钮事件
                  window.scratch.getProjectCover(cover => {
                    //TODO 获取到作品截图
                  })
                  window.scratch.getProjectFile(file => {

                    //TODO 获取到项目文件
                  })
                  // 获取到项目名
                  var projectName = window.scratch.getProjectName()
                }
              },
              //可继续新增按钮
            ]
          },
          blocks: {
            // 积木缩放比例
            scale: 0.8,
            // 隐藏分类 费雷见README附录：
            // 如需动态隐藏显示分类或积木，修改此配置后需手动执行 window.vm.emitWorkspaceUpdate()
            hideCatagorys: [],
            // motion_pointtowards
            // sensing_ball motion_attack 'motion_animation','motion_endanimation'
            hideBlocks: [
              // 'motion_startwl',
              // 'motion_getattack',
              // 'motion_getmodelattack',
              // 'motion_keepmove',
              // 'motion_attacks',
              // 'motion_attackreset',
              // 'motion_modelattackreset',
              // 'motion_stopkeep',
              // 'motion_findmodel',
              // 'motion_setrotate',
              // 'motion_follow',
              // 'motion_closefollow',
              // 'motion_endwl',
              // new
              'motion_glideto', 'motion_pointindirection', 'motion_glidesecstoxy', 'motion_gotoxy', 'motion_turnright', 'motion_turnleft', 'motion_goto', 'motion_forward', 'motion_backward', 'motion_up',
              'motion_down', 'motion_left', 'motion_right', 'motion_movesteps', 'motion_ifonedgebounce', 'motion_setrotationstyle', 'looks_say', 'looks_thinkforsecs', 'looks_think', 'looks_switchcostumeto', 'looks_nextcostume', 'looks_switchbackdropto', 'looks_nextbackdrop',
              'looks_changeeffectby',
              'looks_seteffectto',
              'looks_cleargraphiceffect',
              'looks_gotofrontback',
              'looks_goforwardbackwardlayers',
              'looks_costumenumbername',
              'looks_backdropnumbername',
              'looks_cleargraphiceffects',
              'looks_size',
              'motion_animation', 'motion_endanimation',
              'event_whenthisspriteclicked',
              'event_whenbackdropswitchesto',
              'event_whengreaterthan',
              'control_start_as_clone',
              'control_create_clone_of',
              'control_delete_this_clone',
              'motion_direction',
              'sensing_touchingcolor',
              'sensing_coloristouchingcolor',
              'sensing_distanceto',
              'sensing_askandwait',
              'sensing_answer',
              // 'sensing_keypressed',
              'sensing_mousedown',
              'sensing_mousex',
              'sensing_mousey',
              'sensing_setdragmode',
              'sensing_loudness',
              'sensing_timer',
              'sensing_resettimer',
              'sensing_of',
              'sensing_of_object_menu',
              'sensing_current',
              'sensing_dayssince2000',
              'sensing_username',
              'sound_volume',
              'motion_delstartend',
            ],
          },
          stageArea: { //舞台设置
            fullscreenButton: { //全屏按钮
              show: true,
              handleBeforeSetStageUnFull() { //拦截退出全屏，返回true继续执行
                return true
              },
              handleBeforeSetStageFull() { //拦截全屏，返回true继续执行
                return true
              }
            },
            startButton: { //开始按钮
              show: true,
              handleBeforeStart() { //拦截开始按钮，返回true继续执行
                mywebGame.onPlay();
                return true
              }
            },
            stopButton: { // 停止按钮
              show: true,
              handleBeforeStop() { //拦截停止按钮，，返回true继续执行
                try {
                  window.mcArr.forEach(item => {
                    if (item.mcID) {
                      mywebGame.window.stopMoveBlock(item.mcID);
                    }
                  })
                } catch (error) {
                  console.log(error)
                }

                return true
              }
            }
          },
          //scratch vm初始化完毕
          handleVmInitialized: (vm) => {
            window.vm = vm
          },
          //作品加载完毕
          handleProjectLoaded: () => {
          },
          //默认作品加载完毕
          handleDefaultProjectLoaded: () => {
          },
          //默认项目地址,不需要修请删除本配置项
          defaultProjectURL: fileurl,
          //素材库配置
          assets: {
            //素材库地址，默认为/static下的素材库
            assetHost: './static',
            //素材库索引地址
            defaultIndex: {
              sprites: "./static/json_index/sprites.json",
              costumes: "./static/json_index/costumes.json",
              backdrops: "./static/json_index/backdrops.json",
              sounds: "./static/json_index/sounds.json"
            },
            //拦截角色库打开
            handleBeforeSpriteLibraryOpen() {
              //追加素材库
              let arr = [

              ]
              window.scratch.pushSpriteLibrary(arr)
              // window.scratch.pushSpriteLibrary(Arrays)
              return true;
            },
            //拦截造型库打开
            handleBeforeCostumesLibraryOpen() {
              return true;
            },
            //拦截背景库打开
            handleBeforeBackdropsLibraryOpen() {
              return true;
            },
            //拦截声音库打开
            handleBeforeSoundLibraryOpen() {
              return true;
            }
          },
        }
      </script>
</head>

<body>
  <div id="scratch">
    <div class="wave-loading">
      <span style="--time:1">码</span>
      <span style="--time:2">高</span>
      <span style="--time:3">虚</span>
      <span style="--time:4">拟</span>
      <span style="--time:5">世</span>
      <span style="--time:6">界</span>
      <span style="--time:7">，</span>
      <span style="--time:8">正</span>
      <span style="--time:9">在</span>
      <span style="--time:10">加</span>
      <span style="--time:11">载</span>
      <span style="--time:12">中</span>
      <span style="--time:13">，</span>
      <span style="--time:14">请</span>
      <span style="--time:15">耐</span>
      <span style="--time:16">心</span>
      <span style="--time:17">等</span>
      <span style="--time:18">待</span>
      <span style="--time:19">.</span>
      <span style="--time:20">.</span>
      <span style="--time:21">.</span>
    </div>
  </div>
</body>
<script>


</script>

</html>